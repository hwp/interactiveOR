#!/bin/bash

usage() {
  echo "Usage: $0 -f frame_rate -v vocabulary_file -o outdir files" >&2
  exit 1
}

cmd="$0 $@"

while getopts "f:v:o:" opt; do
  case $opt in
    f)
      frate=$OPTARG
      ;;
    v)
      vocfl=$OPTARG
      ;;
    o)
      outdir=$OPTARG
      ;;
    *)
      usage
      ;;
  esac
done
shift $((OPTIND-1))

files=$@

frre='^[0-9]+/[0-9]+$'
[[ $frate =~ $frre ]] && [[ -n $files ]] && [[ -n $outdir ]] || usage

if [[ -d $outdir ]]; then
  echo "Error: directory $outdir exists" >&2
  exit 1
elif [[ -e $outdir ]]; then
  echo "Error: file $outdir exists" >&2
  exit 1
else
  mkdir "$outdir" || exit 1
fi

vocsize=`gval_voc_size $vocfl`

echo "# this file and the data in this folder is generated by the following command" > "${outdir}/README"
echo "# $cmd" >> "${outdir}/README"
echo "Feature: BoW-SIFT" >> "${outdir}/README"
echo -n "Date: " >> "${outdir}/README"
date >> "${outdir}/README"
echo "Dimension: $vocsize" >> "${outdir}/README"
echo "Vocabulary: $vocfl" >> "${outdir}/README"
echo "Format: double" >> "${outdir}/README"
echo "Frame Rate: $frate" >> "${outdir}/README"

echo "# this file records the raw media file of the feature data" > "${outdir}/SOURCES"

id=0
for file in $files; do
  echo "Processing $file" >&2
  fname=${file##*/}
  fname=${fname%.*}
  class=${fname%_*}
  dest="${class}_${id}.fvec"
  echo "$dest < $file" >> "${outdir}/SOURCES"
  gst-launch-1.0 -q filesrc location="$file" ! avidemux name=demux \
    demux.video_0 ! decodebin ! videorate ! video/x-raw,framerate=$frate ! videoconvert \
    ! bow vocabulary="$vocfl" location="$outdir/$dest" ! fakesink \
    || exit 1
  id=$((id + 1))
done

